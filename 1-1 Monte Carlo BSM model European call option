#Vectorization: One of the strengths of NumPy is the compact, vectorized syntax, e.g., allowing for
#100,000 calculations within a single line of code.

#print("Example 1-1: Monte Carlo valuation of European call option")
#
# Monte Carlo valuation of European call option
#in Black Scholes Merton model
#bsm_mcs_euro.py
#
#import numpy as np

#Parameter Values
S0 = 100 # Initial index level
K = 105 # strike price
T = 1.0 # time-to-maturity
r = 0.05 # riskless short rate
sigma = 0.2 # volatility

I = 100000 # Number of simulations

import numpy as np
#from numpy import *

# Valuation Algorithm:
z = np.random.standard_normal(I) #pseudorandom numbers
ST = S0 * np.exp((r - 0.5 * sigma ** 2) * T + sigma * np.sqrt(T) * z)
    #index values at maturity
hT = np.maximum(ST - K, 0) # inner values at maturity
C0 = np.exp(-r * T) * np.sum(hT) / I # Monte Carlo estimator

#Result Output
print("Value of the European Call Option %5.3f" % C0)
###****DONT FORGET THE F AT THE END OF 5.3%****###
